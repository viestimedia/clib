@import "/src/styles/common";

$compactImageAreaWidthMobile: calc(
  #{$compactTeaserImageWidthMobile} + #{$standardPadding}
);
$compactImageAreaWidthDesktop: calc(#{$compactTeaserImageWidth} + #{$standardPadding});
$mediumImageAreaWidthDesktop: calc(#{$mediumTeaserImageWidth});

.teaserContainer {
  position: relative; // Needed for absolute positioning of metadata
}

.nativeAd {
  .articleInfo {
    padding-bottom: 0;
  }

  .heading {
    padding-bottom: $standardPadding;

    @media (min-width: $smallDesktopLowerLimit) {
      padding-bottom: $standardPadding;
    }
  }
}

.suomenParhaat {
  .heading {
    padding-bottom: 55px; // To make absolutely positioned metadata have room
  }
}

.compact {
  &.suomenParhaat,
  &.nativeAd {
    .articleInfo {
      padding-top: 8px;
    }
  }

  .teaserLink {
    grid-template-areas:
      "banner image"
      "author image"
      "info image";
    grid-template-columns: 1fr $compactImageAreaWidthMobile;
    grid-template-rows: auto auto 1fr;

    @media (min-width: $smallDesktopLowerLimit) {
      grid-template-columns: 1fr $compactImageAreaWidthDesktop;
    }
  }

  &.noImage {
    .teaserLink {
      grid-template-columns: 1fr;
    }
  }

  .articleImage {
    padding: $standardPadding $standardPadding $standardPadding 0;
  }

  .articleInfo {
    display: flex;
    flex-direction: column;
    padding-bottom: 16px;
    padding-right: 10px;

    @media (min-width: $smallDesktopLowerLimit) {
      padding-right: $standardPadding;
    }
  }

  .heading {
    flex: 1;
    padding-bottom: 85px; // To make absolutely positioned metadata have room

    @media (min-width: $tabletLowerLimit) {
      padding-bottom: 70px; // To make absolutely positioned metadata have room
    }
  }

  .metadata {
    bottom: 17px;
    right: $compactImageAreaWidthMobile;

    @media (min-width: $smallDesktopLowerLimit) {
      right: $compactImageAreaWidthDesktop;
    }
  }
}

.medium {
  .teaserLink {
		grid-template-areas:
			"banner"
			"author"
			"info"
			"image";
		grid-template-columns: 1fr;
    grid-template-rows: auto auto 1fr;

    @media (min-width: $smallDesktopLowerLimit) {
			grid-template-areas:
				"banner image"
				"author image"
				"info image";
			grid-template-columns: 1fr $mediumImageAreaWidthDesktop;
    }
  }

  &.noImage {
    .teaserLink {
      grid-template-columns: 1fr;
    }
  }

  .articleImage {
    @media (min-width: $smallDesktopLowerLimit) {
	    padding: 0;
			margin: auto 0;	
    }
  }

  .articleInfo {
    display: flex;
    flex-direction: column;
		padding: 0 $standardPadding $standardPadding;
		align-items: flex-start;

    @media (min-width: $smallDesktopLowerLimit) {
			padding: 0 $standardPadding 0 0;
    }
  }

  .heading {
		flex: 1;
		padding-top: $standardPadding;
		padding-bottom: 0;

    @media (min-width: $smallDesktopLowerLimit) {
			padding-left: $standardPadding;
    }
  }

	.tag {
		@media (min-width: $smallDesktopLowerLimit) {
			margin-top: auto;
			padding: 0 0 15px $standardPadding;
    }
	}

  .metadata {
    bottom: 17px;
    right: $standardPadding;

    @media (min-width: $smallDesktopLowerLimit) {
      right: $mediumImageAreaWidthDesktop;
    }
  }
}

.teaserLink {
  color: $fontColor;
  background: $white;
  display: grid;
  grid-template-areas: "banner" "image" "author" "info";
}

.authorContainer {
  grid-area: author;
  padding: 10px 20px 0 20px;
}

.banner {
  grid-area: banner;
}

.articleImage {
  grid-area: image;

	img {
		width: 100%;
	}
}

.articleInfo {
  grid-area: info;
  padding: $standardPadding $standardPadding 11px;
}

.heading {
  padding-bottom: 71px; // To make absolutely positioned metadata have room

  @media (min-width: $smallDesktopLowerLimit) {
    padding-bottom: 44px; // To make absolutely positioned metadata have room
  }

  span {
    color: $gray2;
  }
}

.subheading {
	@extend %sansSerifRegular;
	font-size: $fontSizeS;
	padding: 5px 0 10px 0;
}

.metadata {
  position: absolute;
  left: $standardPadding;
  bottom: 13px;
}

.hasBorder {
	border-bottom: 4px solid $brandColorLight;
}